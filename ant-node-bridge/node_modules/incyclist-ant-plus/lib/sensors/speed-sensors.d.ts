import { Constants } from '../consts';
import { ISensor, Profile } from '../types';
import Sensor, { SensorState } from './base-sensor';
export declare class SpeedSensorState extends SensorState {
    SpeedEventTime: number;
    CumulativeSpeedRevolutionCount: number;
    _UpdateTime: number;
    CalculatedDistance: number;
    CalculatedSpeed: number;
    OperatingTime?: number;
    Motion?: boolean;
}
export default class SpeedSensor extends Sensor implements ISensor {
    private states;
    wheelCircumference: number;
    getProfile(): Profile;
    getDeviceType(): number;
    getChannelConfiguration(): {
        type: string;
        transmissionType: number;
        timeout: Constants;
        period: number;
        frequency: number;
    };
    onEvent(data: Buffer): void;
    setWheelCircumference(wheelCircumference: number): void;
    onMessage(data: Buffer): void;
}
