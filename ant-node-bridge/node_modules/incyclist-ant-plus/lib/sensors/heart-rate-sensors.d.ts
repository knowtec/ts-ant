import { ChannelConfiguration, ISensor, Profile } from '../types';
import Sensor, { SensorState } from './base-sensor';
export declare class HeartRateSensorState extends SensorState {
    BeatTime: number;
    BeatCount: number;
    ComputedHeartRate: number;
    OperatingTime?: number;
    PreviousBeat?: number;
    IntervalAverage?: number;
    IntervalMax?: number;
    SessionAverage?: number;
    SupportedFeatures?: number;
    EnabledFeatures?: number;
}
export default class HeartRateSensor extends Sensor implements ISensor {
    protected states: {
        [id: number]: HeartRateSensorState;
    };
    protected pages: {
        [id: number]: Page;
    };
    getDeviceType(): number;
    getProfile(): Profile;
    getDeviceID(): number;
    getChannelConfiguration(): ChannelConfiguration;
    onEvent(data: Buffer): void;
    onMessage(data: Buffer): void;
}
declare enum PageState {
    INIT_PAGE = 0,
    STD_PAGE = 1,
    EXT_PAGE = 2
}
type Page = {
    oldPage: number;
    pageState: PageState;
};
export {};
